# Generated by Django 2.1.2 on 2019-01-30 19:44

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import retman_api.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('MS', 'Абонемент'), ('VS', 'Обычное'), ('PT', 'Персональная тренировка'), ('GT', 'Групповая тренировка')], default='MS', max_length=30)),
                ('amount', models.IntegerField()),
                ('value', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card_id', models.IntegerField(unique=True)),
                ('full_name', models.CharField(max_length=150, unique=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=50, null=True)),
                ('photo', models.FileField(blank=True, null=True, upload_to=retman_api.models.image_upload, verbose_name='Фотография')),
                ('who_advised', models.IntegerField(blank=True, null=True)),
                ('amount_of_available_visitations', models.IntegerField(default=0)),
                ('amount_of_available_personal', models.IntegerField(default=0)),
                ('amount_of_available_group', models.IntegerField(default=0)),
                ('passport', models.CharField(blank=True, max_length=20, null=True)),
                ('notes', models.TextField(blank=True, default='')),
            ],
        ),
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrollment_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('months', models.IntegerField(default=1)),
                ('freeze_start', models.DateField(blank=True, null=True)),
                ('freeze_end', models.DateField(blank=True, null=True)),
                ('expiration_date', models.DateTimeField(null=True)),
                ('cost', models.IntegerField(default=2000)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customer', to='retman_api.Customer')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('MS', 'Абонемент'), ('VS', 'Обычное'), ('PT', 'Персональная тренировка'), ('GT', 'Групповая тренировка')], max_length=30)),
                ('value', models.IntegerField()),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Visitation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('came_at', models.DateTimeField(auto_now_add=True)),
                ('left_at', models.DateTimeField(blank=True, null=True)),
                ('key_number', models.IntegerField(blank=True, null=True)),
                ('type', models.CharField(choices=[('VS', 'Обычное'), ('PT', 'Персональная тренировка'), ('GT', 'Групповая тренировка')], default='VS', max_length=30)),
                ('note', models.TextField(blank=True, default='')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='visit_customer', to='retman_api.Customer')),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='cost',
            unique_together={('type', 'amount')},
        ),
    ]
